name: LogEYE CI/CD

on: [push]
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  # Job 1: 빌드, 테스트, 코드 분석
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle (without tests)
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: ./gradlew build -x test

      - name: Test with Gradle
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        run: ./gradlew test

      - name: Static Code Analysis
        run: ./gradlew check

      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test/

  # Job 2: Docker 이미지 빌드 및 푸시 (main 브랜치에 push될 때만 실행)
  build-and-push-docker-image:
    # 'build-and-analyze' 작업이 성공해야만 이 작업이 실행됩니다.
    needs: build-and-analyze
    # 'main' 브랜치에 push 이벤트가 발생했을 때만 실행되도록 조건을 추가합니다. PR에서는 실행되지 않습니다.
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/logeye:latest # Docker Hub 사용자 이름과 이미지 태그
          cache-from: type=inline
          cache-to: type=inline